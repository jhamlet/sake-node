var Path = require("path");

directory("tmp/html");

console.log(this);

description("Description for task one");
task("one", "tmp/html", function (t) {
    console.log(t.name);
    sh("sleep 1; ls -al ./lib", function (txt) {
        console.log(txt);
    });
});

description("Description for task two");
task("two", "one", function (t) {
    console.log(t.name);
    sh("sleep 1; ls -al ./test", function (txt) {
        console.log(txt);
    });
});

description("Description for task three");
task("three", "two", function (t) {
    console.log(t.name);
    console.log("says: " + arguments[1]);
    sh("sleep 1; ls -al ./examples", function (txt) {
        console.log(txt);
    });
    sh("ls -al");
});

stitch.include("test/other-config.js");

stitch.configure(function (cfg) {
    cfg.filename_format = "${bundle.name}-${date.getTime()}.${type.extension}";
    
    cfg.bundle("core", function (core) {
        core.insert("js", "This would be some javascript for core.");
        core.fetch("js", "http://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js");
        core.exec("js", "ls -al");
        // ["file-one.js", "file-two.js"].forEach(function (p) {
        //     core.file("js", p);
        // });

        core.stylesheet(function () {
           core.insert("some styles for core");
        });

    });
   
    cfg.bundle("sub-module", function (sub) {
   
       sub.include("core");
       
       sub.insert("js", "Some javascript for sub-module");
       
       sub.stylesheet(function () {
           sub.insert("some styles for sub-module");
       });
    });
});

stitch.configure("other", function (cfg) {
    
    cfg.bundle("other-mod", function (mod) {
        
        mod.include("default:sub-module");
        
    });
    
});

// Task.invoke("three", "foo");

