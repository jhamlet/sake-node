
(function (exports) {

var util = require('stitch/util'),
    Module = require('stitch/module').Module,
    stitch = {

        modules: {},
        
        configure: function (fn) {
            fn.call(this, this);
        },
    
        set: function (key, value) {
        
        },
    
        get: function (key) {
        
        },
    
        module: function (name, fn) {
            var mod;
            
            if (!fn) {
                return this.getModule(name);
            }
            
            mod = this.modules[name] || (this.modules[name] = new Module());
            fn.call(mod, mod);
        },
    
        filter: function (type, name, fn) {
        },

        getModule: function (name) {
            var mod = this.modules[name];
            
            if (!mod) {
                throw("Unknown Module '" + name + "'");
            }
            
            return mod;
        },
    
        getFilter: function (name) {
            name = this.mimeTypes.hasOwnProperty(name) ?
                this.mimeTypes[name] :
                name
            ;
        
            return this.filters[name];
        },
    
        filters: {
            'css': function () {
            
            },
        
            'js': function () {
            
            }
        },

        mimeTypes: {
            'text/javascript':  'js',
            'text/stylesheet':  'css',
            'text/html':        'html',
            'text/plain':       'text',
            'application/json': 'json'
        }
    }
;

util.merge(exports, stitch);
    
}(exports || window));

